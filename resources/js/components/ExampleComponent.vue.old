 <template>
    <div class="container">
        <div class="row">
             <div class="col-md-6">
               <h2>Lista de Gastos</h2>
                <table class="table text-center">
                  <thead>
                    <tr>
                    <th scope="col"> Nombre </th>
                    <th scope="col"> Descripcion </th>
                    <th scope="col"> Contenido </th>
                    <th scope="col"> Acciones </th>
                    </tr>
                </thead>
                <tbody> 
                <tr v-for='gasto in arrayGastos" :key="gasto.id">
                    <td v-text="gasto.name"></td>
                    <td v-text="gasto.description"></td>
                    <td v-text="gasto.content"></td>
                    <td >
                    <button class="btn" @click="loadFieldsUpdate(gasto)>Modificar</button>
                    <button class="btn" @click="deleteGastos(gasto)>Modificar</button>
                    </td>
                </tr>
                </tbody>
            </table>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                  <label>Nombre</label>
                  <input v-model="name" type="text" class="form-control">
                  <label>Descripcion</label>
                  <input v-model="descripcion" type="text" class="form-control">
                  <label>Contenido</label>
                  <input v-model="content" type="text" class="form-control">
                </div>
                <div class="container-buttons">
                    <button v-if="update == 0" @click="saveGastos()" class="btn btn-success">AÃ±adir</button>
                    <button v-if="update != 0" @click="updateGastos()" class="btn btn-success">Actualizar</button>
                    <button v-if="update == 0" @click="clearFields()" class="btn btn-success">Atras</button>
                </div>
           </div> 
        </div>
     </div>
</template> 
<script>
    export default {
        data(){
            return{
                name:"",
                description:"",
                content:"",
                update:0,
                arrayGastos:[],

            }
        },
        methods:{
            getGastos(){
                let me=this;
                let url = '/gastos'
                axios.get(url).then(function (response){
                    me.arrayGastos = response.data;
                })
                .catch(function(error){console.log(error);});
            },
            saveGastos(){
                let me = this;
                let url = '/gastos/store'
                axios.post(url,{
                    'name':this.name,
                    description:this.description,
                    content:this.content,
                }).then(function(response){
                    me.getGastos();
                    me.clearFields();
                })
                .catch(function(error){console.log(error);})
            },
            updateGastos(){
                 let me = this;  
                 let url = '/gastos/update'
                axios.post(url,{
                    'id':this.update,
                    'name':this.name,
                    description:this.description,
                    content:this.content,
                }).then(function(response){
                    me.getGastos();
                    me.clearFields();
                })
                .catch(function(error){console.log(error);})
            },
            loadFieldsUpdate(data){
                this.update=data.id
                let me=this;
                let url='/tareas/edit/'+this.update;
                axios.get(url).then(function(response){
                    me.name=response.data.name;
                    me.description=response.data.description;
                    me.content=response.data.content;
                })
                .catch(function(error){
                    console.log(error);
                });
            },
            deleteGastos(data){
                let met = this;
                let gasto_id=data.id;
                if (confirm('Seguro que deseas borrar?')){
                    axios.delete('/gastos/delete/'+gasto_id
                    ).then(function(response){
                        me.getGastos();
                    });
                } 
            },
            clearFields(){
                this.name='';
                this.description='';
                this.content='';
                this.update=0;
            }
        },
        mounted() {
            this.getGastos();
            
        }
    }
</script>
